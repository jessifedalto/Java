01000010 - 66

1000

01010111 - 87

01000101

01000101 = 69

01000000 = 64

01010000 = 80

4 pilares da orientação à objetos:
-Abstração - colocar algo do mundo real em classe
-Encapsulamento - poder escondedr informações
-Herança
-Polimorfismo

Encapsulamento:
-default quando você não coloca nada, estão acessíveis no pacote
- Privado, dentro da classse
- Publico, todo mundo vê
- Protected, acesso dentro de outra classe.

Vantagens de fazer algo privado:

public class Login
{
	private String login;
	private String senha;
}

Colocar criptografia na senha, supor que existe uma função para criptografar senha

static String criptografar(String input)
{
	return "Não implementei kkk";
}

Esqeuccer de criptografar a senha: Ferra o banco de dados, pois não consegue distinguir a senha do usuario pela senha criptografado.

Função de criptografar muito ruim, vai fazer outra função melhor, porém esqueceu de que uma senha criptografada antigamente e outra senha nova, que nunca foi criptografada, gerando um grande problema.

Grande ideia, deixar as coisas privadas e fazer get e set

public String getLogin(String value)//MÉTODOS
{
	return this.login;
}

public String setLogin()//ATRIBUTO
{
	this.login = value;
}

public String getSenha(String value)//ATRIBUTO
{
	return this.senha;
}

public String setLogin()//ATRIBUTO
{
	//função de criptografia vai para aqui
	this.senha = value;
}

campo privado e atributo get e set

private Integer idade;

public Integer getIdade()//ATRIBUTO
{
	return this.idade;
}

publis void setIdade(Integer value)//ATRIBUTO
{
	this.idade = value;
}

//função adiciona um

public void addIdade(Integer value)//ATRIBUTO
{
	this.idade += value;
}

Conjunto de um campo e um get/set é atributo.

>>>>>>>>
