Classe abstrata

- classe onde não implementa funções, ela só serve de base para outras classes, só é implementada pelas classes filhas.

Pode herdar de:
- classe mãe
- classes abstratas
- interfaces

Usamos herança pra reduzir código e personalizar elementos

Método iterator, tem dois metodos, hasnext e next.

A LinkedList tem interable, vem de uma função abstrata chamada interator.

Interador ele pula de um em um, e pode guardar uma valor que você não tem acesso, anda na lista de forma devagar.

Iterable é uma classe generica;

Preciso implementar o que eu não estou usando também;

CLASSE DO ITERATOR:
	LinkedListIterator.java

public E next()
{
 current = 
	current == null ?
}


CLASSE HASHSET
- função chamada hashcode, todos os objetos no java tem >>> muito importante
retorna um número para cada objeto que existe.
pega seus dados e faz vários cálculos com ele e chega em um número.
pode ter uma string estranha com o mesmo hash de outro, chamamos isso de colisão
strings que dão problema geralmente são muito bizarras.

Hashset: guardar informação de forma a comparar os dados muito rápido, só para String nesse trabalho.
String hashSet, string tem a função hashcode e muito útil para saber comparações entre strings, usado para saber se duas palavras são iguais.]

As funções de hash são ótimas para guardar valores e compara-los.

Nossa classe vai ter um vetor, podemos utilizar as funções já prontas do java, não as nossas.

Função add(String name)

Adicionando Ola, mundo! módulo do meu hashCode % 10 = 1, guarda na posição 1
Hello, World! 15675 % 10 = 5, guarda na posição 5

10 = quantidade de letras/símbolos

utilizar o contains(String) se tiver na casinha dele retorna true, se não retorna falso

e se houver colisão? 
Temos que tratá-la, cada elemento do meu vetor é uma lista,

HashCode ArrayList<String>[] data;

Coisas que não vamos implementar, mas é bom saber que existe, quando temos muitos valores por casa do vetor é comum aumentar o vetor automaticamente e reajustar os itens. usar vetor com quantidade fixas, por exemplo, 100 posições.

As vezes as listas são substituidas por outras estruturas de dados mais eficientes.

Contains
1. Obtém o hashCode da String.
2. Descobre qual casa do vetor (qual lista) ele pertence. (Use %).
3. Busque na lista a string pedida(use compareTo) para ter certeza que as strings são iguais.

StringHaashSet:
- data : ArrayList<String>[]
+ add(String) ordem de 1
+ contains() : boolean praticamente ordem de 1 também

+ iterator(): Iterator<String> 